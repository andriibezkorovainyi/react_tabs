{"version":3,"sources":["helpers.ts","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["getTabById","tabs","tabId","find","tab","id","Tabs","selectedTabId","onTabSelected","isTabSelected","currentTabId","className","map","title","classNames","href","onClick","handleSelectTab","content","App","useState","setSelectedTabId","selectedTab","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAaC,GACtC,OAAOD,EAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,MAAUD,EAAK,G,WCSvCK,EAAkB,SAAC,GAM1B,IAJFL,EAIC,EAJDA,KACAM,EAGC,EAHDA,cACAC,EAEC,EAFDA,cAGIC,EAAgB,SAACC,GAAD,OACpBV,EAAWC,EAAMM,GAAeF,KAAOK,GASzC,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGV,EAAKW,KAAI,SAAAR,GACR,IAAQC,EAAcD,EAAdC,GAAIQ,EAAUT,EAAVS,MAEZ,OACE,oBAEEF,UAAWG,IACT,CAAE,YAAaL,EAAcJ,KAE/B,UAAQ,MALV,SAOE,mBACEU,KAAI,WAAMV,GACV,UAAQ,UACRW,QAAS,kBAxBD,SAACN,EAAsBN,GACxCK,EAAcC,IACjBF,EAAcJ,GAsBaa,CAAgBZ,EAAID,IAHrC,SAKGS,KAXER,UAkBf,qBAAKM,UAAU,mBAAmB,UAAQ,aAA1C,SACGX,EAAWC,EAAMM,GAAeW,cChD5BjB,EAAc,CACzB,CAAEI,GAAI,QAASQ,MAAO,QAASK,QAAS,eACxC,CAAEb,GAAI,QAASQ,MAAO,QAASK,QAAS,eACxC,CAAEb,GAAI,QAASQ,MAAO,QAASK,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAS,SAAnD,mBAAOb,EAAP,KAAsBc,EAAtB,KACMC,EAActB,EAAWC,EAAMM,GAKrC,OACE,sBAAKI,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBW,EAAYT,SAGlC,cAAC,EAAD,CACEZ,KAAMA,EACNM,cAAeA,EACfC,cAbgB,SAAC,GAAuB,IAArBH,EAAoB,EAApBA,GACvBgB,EAAiBhB,UCdrBkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a536cb80.chunk.js","sourcesContent":["export function getTabById(tabs: Tab[], tabId: string): Tab {\n  return tabs.find(tab => tab.id === tabId) || tabs[0];\n}\n","import { FC } from 'react';\nimport classNames from 'classnames/bind';\nimport { getTabById } from '../../helpers';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: FC<Props> = (\n  {\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  },\n) => {\n  const isTabSelected = (currentTabId: string) => (\n    getTabById(tabs, selectedTabId).id === currentTabId\n  );\n\n  const handleSelectTab = (currentTabId: string, tab: Tab) => {\n    if (!isTabSelected(currentTabId)) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                key={id}\n                className={classNames(\n                  { 'is-active': isTabSelected(id) },\n                )}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleSelectTab(id, tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div className=\"block fancy-text\" data-cy=\"TabContent\">\n        {getTabById(tabs, selectedTabId).content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { getTabById } from './helpers';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n  const selectedTab = getTabById(tabs, selectedTabId);\n  const onTabSelected = ({ id }: Tab): void => {\n    setSelectedTabId(id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}